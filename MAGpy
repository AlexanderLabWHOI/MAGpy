shell.executable("/bin/bash")
shell.prefix("source $HOME/.bashrc; ")

import os

configfile: "config.json"

IDS, = glob_wildcards("mags/{id}.fa")

rule all:
	 input: "sourmash_report.csv", "diamond_bin_report_plus.tsv", expand("pfam/{sample}.pfam", sample=IDS), expand("sourmash/{sample}.sm", sample=IDS), expand("diamond_report/bin.{sample}.tsv", sample=IDS), "checkm_plus.txt", "tree/MAGpy/MAGpy.tree.nwk"

rule checkm:
	input: "mags"
	output: "checkm.txt"
	threads: 16
	conda: "envs/MAGpy-2.7.yaml"
	shell: "checkm lineage_wf -f checkm.txt --reduced_tree -t {threads} -x fa {input} ./checkm"

rule checkm_plus:
	input: "checkm.txt"
	output: "checkm_plus.txt"
	threads: 1
	conda: "envs/MAGpy-3.5.yaml"
	shell: "add_tax.py {input} > {output}"

rule prodigal:
        input: 'mags/{id}.fa'
        output: 'proteins/{id}.faa'
        conda: "envs/MAGpy-3.5.yaml"
	shell: 'prodigal -p meta -a {output} -q -i {input}'

rule diamond:
        input: 'proteins/{id}.faa'
        output: 'diamond/{id}.diamond.tsv'
        threads: 16
        params:
                db=config["uniprot_sprot"],
                of="6 qseqid sseqid stitle pident qlen slen length mismatch gapopen qstart qend sstart send evalue bitscore"
        conda: "envs/MAGpy-3.5.yaml"
	shell: "diamond blastp --threads {threads} --max-target-seqs 10 --db {params.db} --query {input} --outfmt {params.of} --out {output}"

rule diamond_report:
	input: 
		tsv='diamond/{id}.diamond.tsv',
		faa='proteins/{id}.faa'
	output: 'diamond_report/bin.{id}.tsv', 'diamond_report/con.{id}.tsv'
	params:
		outdir="diamond_report"
	conda: "envs/MAGpy-3.5.yaml"
	shell: "diamond_report.pl {input.tsv} {input.faa} {params.outdir}"

rule diamond_bin_summary:
        input: expand("diamond_report/bin.{sample}.tsv", sample=IDS)
        output: "diamond_bin_report.tsv"
	conda: "envs/MAGpy-3.5.yaml"
        shell: "echo -e 'name\tnprots\tnhits\tnfull\tgenus\tngenus\tspecies\tnspecies\tavgpid' >> {output} && cat {input} >> {output}"

rule diamond_bin_summary_plus:
        input: "diamond_bin_report.tsv"
        output: "diamond_bin_report_plus.tsv"
	conda: "envs/MAGpy-3.5.yaml"
        shell: "add_tax_diamond.py {input} > {output}"


rule sourmash_sig:
        input: 'mags/{id}.fa'
        output: 'sourmash/{id}.sig'
	conda: "envs/MAGpy-3.5.yaml"
        shell: "sourmash compute --scaled 1000 -k 31 -o {output} {input}"

rule sourmash_gather:
        input: 'sourmash/{id}.sig'
        output:
                csv='sourmash/{id}.csv',
                out='sourmash/{id}.sm'
	params:
		gb=config["sourmash_gbk"]
	conda: "envs/MAGpy-3.5.yaml"
	shell: "sourmash gather -k 31 {input} {params.gb} -o {output.csv} > {output.out}"

rule sourmash_report:
	input: expand("sourmash/{sample}.csv", sample=IDS)
	output: 'sourmash_report.csv'
	conda: "envs/MAGpy-3.5.yaml"
	shell: "echo 'sample,intersect_bp,f_orig_query,f_match,f_unique_to_query,name,filename,md5' >> {output} && sourmash_report.pl {input} >> {output}"

rule pfam_scan:
	input: 'proteins/{id}.faa'
	output: 'pfam/{id}.pfam'
	threads: 8
	params:
		pfam=config["pfam_dir"]
	conda: "envs/MAGpy-3.5.yaml"
	shell: "pfam_scan.pl -outfile {output} -as -cpu {threads} -fasta {input} -dir {params.pfam}"

rule phylophlan_link:
	input: expand("proteins/{sample}.faa", sample=IDS)
	output: "tree/MAGpy/MAGpy.tree.nwk"
	threads: 16
	conda: "envs/MAGpy-2.7.yaml"
	params:
		pdir=config["phylophlan_dir"],
		unn=os.getpid()
	shell: 
		'''
		CWD=`pwd`
		mkdir {params.pdir}/input/{params.unn}
		cp proteins/*.faa {params.pdir}/input/{params.unn}
		cd {params.pdir}
		./phylophlan.py -u {params.unn} --nproc {threads}
		mkdir -p $CWD/tree/MAGpy
		mv {params.pdir}/output/{params.unn}/*.nwk $CWD/tree/MAGpy/MAGpy.tree.nwk
		mv {params.pdir}/output/{params.unn}/*.xml $CWD/tree/MAGpy/MAGpy.tree.xml
		cd $CWD
		rm -rf {params.pdir}/input/{params.unn}
		rm -rf {params.pdir}/data/{params.unn} 
		'''
